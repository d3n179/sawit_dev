<com:TContent ID="Main">
	<h2>Master COA</h2>
	<hr>
	 <com:TActivePanel CssClass="form"><!--form begin-->	
	<div class="modal fade" id="modal-1">
		<div class="modal-dialog">
			<div class="modal-content">
				
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title"><com:TActiveLabel ID="modalJudul"/></h4>
				</div>
				
				<div class="modal-body">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
							<label for="DDKategori" class="control-label">Group Coa</label>
								<com:TActiveHiddenField ID="idCoa"/>
								<com:TActiveHiddenField ID="treeNode"/>
								<com:TActiveHiddenField ID="treeId"/>
								<com:TActiveDropDownList 
									ID="DDGroup"
									Width="300px"
									PromptText="--Pilih--"
									PromptValue="empty"
									Enabled="false"
									AutoPostBack="false"
									CssClass="form-control"
									DataTextField="nama"
									DataValueField="id">
									</com:TActiveDropDownList>
								<com:TRequiredFieldValidator 
										  ControlToValidate="DDGroup"	
										  InitialValue="empty"										 
										  ErrorMessage=""
										  Display="Dynamic"
										  FocusOnError="true" 
										  CssClass="valRequired"
										  ControlCssClass="valctrl"
										  ValidationGroup="val" />		
							</div>
						</div>			
					</div>
					
					<div class="row">
						<div class="col-md-3">
							<div class="form-group">
							<label for ="kodeCoa" class="control-label">Kode Coa</label>
								<com:TActiveTextBox 
										ID="kodeCoa" 
										CssClass="form-control" 
										Attributes.PlaceHolder="Kode"/>
										<com:TRequiredFieldValidator 
										  ControlToValidate="kodeCoa"											 
										  ErrorMessage=""
										  Display="Dynamic"
										  FocusOnError="true" 
										  CssClass="valRequired"
										  ControlCssClass="valctrl"
										  ValidationGroup="val" />
							</div>
						</div>	
						
						<div class="col-md-6">
							<div class="form-group">
							<label for ="nama" class="control-label">Nama</label>
								<com:TActiveTextBox 
										ID="nama" 
										CssClass="form-control" 
										Attributes.PlaceHolder="Nama"/>
										<com:TRequiredFieldValidator 
										  ControlToValidate="nama"											 
										  ErrorMessage=""
										  Display="Dynamic"
										  FocusOnError="true" 
										  CssClass="valRequired"
										  ControlCssClass="valctrl"
										  ValidationGroup="val" />
							</div>
						</div>			
					</div>
					
				</div>
				
				<div class="modal-footer">
					<div class="row">
									<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
									<com:TActiveButton
										ID="submitBtn" 
										Text="Submit"
										OnClick="submitBtnClicked"
										CausesValidation="true"
										ValidationGroup="val"
										CssClass="btn btn-info">
										 <prop:ClientSide 
											OnLoading="loadContent();"
											OnComplete="unloadContent();"/>
									</com:TActiveButton>		
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="row">	
		<div class="col-md-12">
			<div class="form-group">
				<com:TActiveHiddenField ID="menuList"></com:TActiveHiddenField>
				<ul id="treeDemo" class="ztree" style="width:1000px; height:auto;"></ul>
			</div>
		</div>
	</div>
	</com:TActivePanel>	<!--form End-->
	<com:TCallback ID="cariCallback" OnCallback="cariBtnClicked" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="detailCallback" OnCallback="detailClicked" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="cetakCallback" OnCallback="cetakLapKartuStok" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="closingCallback" OnCallback="closingClicked" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="GroupCallback" OnCallback="bindGroupCoa" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="SelectGroupCallback" OnCallback="selectGroupCoa" ActiveControl.CausesValidation="false"/>
	<com:TCallback ID="DeleteCallback" OnCallback="DeleteData" ActiveControl.CausesValidation="false"/>
	
	<script type="text/javascript">
		<!--
		var setting = {
			view: {expandSpeed:"2",
				addHoverDom: addHoverDom,
				removeHoverDom: removeHoverDom,
				selectedMulti: false
			},
			edit: {
				enable: true,
				showRemoveBtn: showRemoveBtn,
				showRenameBtn: showRenameBtn
			},
			data: {
				simpleData: {
					enable: true
				}
			},
			callback: {
				beforeRemove: beforeRemove,
				beforeEditName: beforeEditName,
				beforeRename: beforeRename
			}
		};
		
		
		function clearForm()
		{
			var request= <%= $this->GroupCallback->ActiveControl->Javascript %>;
				request.dispatch();
						
			jQuery('#<%= $this->nama->getClientID()%>').val('');
			jQuery('#<%= $this->kodeCoa->getClientID()%>').val('');
			jQuery('#<%= $this->idCoa->getClientID()%>').val('');
			jQuery('#<%= $this->DDGroup->getClientID()%>').val('empty');
			
		}
			
		function filter(treeId, parentNode, childNodes) {
			if (!childNodes) return null;
			for (var i=0, l=childNodes.length; i<l; i++) {
				childNodes[i].name = childNodes[i].name.replace(/\.n/g, '.');
			}
			return childNodes;
		}
		
		function beforeRemove(treeId, treeNode) {
			var zTree = jQuery.fn.zTree.getZTreeObj("treeDemo");
			zTree.selectNode(treeNode);
			msg = confirm("Hapus Data '" + treeNode.id + "' Ini ?");
			if(msg)
			{
				var request= <%= $this->DeleteCallback->ActiveControl->Javascript %>;
						request.setCallbackParameter({
							id:treeNode.id_table
						});
						request.dispatch();
			}
			//return confirm("Hapus Data '" + treeNode.id + "' Ini ?");
		}	
			
		function beforeEditName(treeId, treeNode)
		{
			var zTree = jQuery.fn.zTree.getZTreeObj("treeDemo");
			zTree.selectNode(treeNode);
			
			clearForm();
			jQuery('#modal-1').modal('show');
			jQuery('#<%= $this->modalJudul->getClientID()%>').text('Edit COA');
			jQuery('#<%= $this->DDGroup->getClientID()%> > [value=' + treeNode.id_parent_table + ']').attr("selected", "true");
			jQuery('#<%= $this->idCoa->getClientID()%>').val(treeNode.id_table);
			jQuery('#<%= $this->kodeCoa->getClientID()%>').val(treeNode.id);
			jQuery('#<%= $this->nama->getClientID()%>').val(treeNode.nama);
			jQuery('#<%= $this->treeNode->getClientID()%>').data(treeNode);
			jQuery('#<%= $this->treeId->getClientID()%>').data(treeId);
			var request= <%= $this->SelectGroupCallback->ActiveControl->Javascript %>;
						request.setCallbackParameter({
							id:treeNode.id_parent_table
						});
						request.dispatch();
						
			return false;
		}
		
		function refreshRename(st,id,id_table,pId,id_parent_table,newName)
		{
			var treeId = jQuery('#<%= $this->treeId->getClientID()%>').data();
			var treeNode = jQuery('#<%= $this->treeNode->getClientID()%>').data();
			if(st == '0')
			{
				var zTree = jQuery.fn.zTree.getZTreeObj("treeDemo");
				zTree.addNodes(treeNode, {id_table:id_table, id:id, id_parent_table:id_parent_table,pId:pId, name:id + " - " + newName, nama:newName});
			}
			else
			{
				beforeRename(treeId, treeNode, newName);
			}
		}
		
		function beforeRename(treeId, treeNode, newName) {
			if (newName.length == 0) {
				setTimeout(function() {
					var zTree = jQuery.fn.zTree.getZTreeObj("treeDemo");
					zTree.cancelEditName();
					alert("Nama Tidak Boleh Kosong !");
				}, 0);
				return false;
			}
			return true;
		}

		var newCount = 1;
		function addHoverDom(treeId, treeNode) {
			var sObj = jQuery("#" + treeNode.tId + "_span");
			if (treeNode.editNameFlag || jQuery("#addBtn_"+treeNode.tId).length>0) return;
			var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
				+ "' title='add node' onfocus='this.blur();'></span>";
			sObj.after(addStr);
			var btn = jQuery("#addBtn_"+treeNode.tId);
			if (btn) btn.bind("click", function(){
				var zTree = jQuery.fn.zTree.getZTreeObj("treeDemo");
				jQuery('#modal-1').modal('show');
				jQuery('#<%= $this->modalJudul->getClientID()%>').text('Tambah COA');
				clearForm();
				
				jQuery('#<%= $this->DDGroup->getClientID()%> > [value=' + treeNode.id_parent_table + ']').attr("selected", "true");
				jQuery('#<%= $this->treeNode->getClientID()%>').data(treeNode);
				console.log(treeNode);
				console.log(jQuery('#<%= $this->treeNode->getClientID()%>').data());
				var request= <%= $this->SelectGroupCallback->ActiveControl->Javascript %>;
						request.setCallbackParameter({
							id:treeNode.id_table
						});
						request.dispatch();
						
				//zTree.addNodes(treeNode, {id:(100 + newCount), pId:treeNode.id, name:"new node" + (newCount++)});
				return false;
			});
		};
		function removeHoverDom(treeId, treeNode) {
			jQuery("#addBtn_"+treeNode.tId).unbind().remove();
		};
		
		function showRemoveBtn(treeId, treeNode) {
			if(treeNode.tId == "treeDemo_1")
				return false;
			else
				return true;
		}
		function showRenameBtn(treeId, treeNode) {
			if(treeNode.tId == "treeDemo_1")
				return false;
			else
				return true;
		}
		
		function BindTreeView()
		{
			var menuArr = JSON.parse(jQuery('#<%= $this->menuList->getClientID()%>').val());
				
			jQuery.fn.zTree.init(jQuery("#treeDemo"), setting, menuArr);
		}
		
		jQuery(document).ready(function(){
			BindTreeView();
		});
		//-->
		</script>
		<style type="text/css">
.ztree li span.button.add {margin-left:2px; margin-right: -1px; background-position:-144px 0; vertical-align:top; *vertical-align:middle}
.ztree li span.button.switch.level0 {visibility:hidden; width:1px;}
.ztree li ul.level0 {padding:0; background:none;}
	</style>
	
		
</com:TContent>
